<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
[
<!ENTITY preamble SYSTEM "@srcdir@/preamble.sgml">
<!ENTITY supplatforms SYSTEM "@srcdir@/supportedplatforms.sgml">
<!ENTITY OPENSSL "<citerefentry><refentrytitle>ssl</refentrytitle>
<manvolnum>3</manvolnum></citerefentry>">
<!ENTITY CURSES "<citerefentry><refentrytitle>curses</refentrytitle>
<manvolnum>3X</manvolnum></citerefentry>">
<!ENTITY YP "@PACKAGE_NAME@">
<!ENTITY yp "<command>@PACKAGE@</command>">
<!ENTITY FREEBSD "<trademark class='registered'>FreeBSD</trademark>">
<!ENTITY SUN "<trademark class='trademark'>Sun</trademark>">
<!ENTITY SOLARIS "&SUN; <trademark class='trademark'>Solaris</trademark>">
<!ENTITY YPPKG "@PACKAGE_TARNAME@-@PACKAGE_VERSION@.tar.gz">
<!ENTITY YPVER "@PACKAGE_VERSION@">
]>
<article>

  <articleinfo>
    <title>Installation Instructions</title>
    <author>
      <firstname>Rafael</firstname>
      <surname>Ostertag</surname>
    </author>
    <releaseinfo>
      $Id$
    </releaseinfo>
  </articleinfo>

  &preamble;

  <sect1 id="prereq">
    <title>Build Prerequisites</title>

    <para>&YP; was designed to have only few library dependencies, and
      to build on most popular Unixes.</para>

    <sect2 id="supportedplatforms">
      <title>Supported Platforms</title>

      &supplatforms;
    </sect2>

    <sect2 id="requiredlibraries">
      <title>Required Libraries</title>

      <para>&YP; depends on two libraries</para>

      <para>
	<itemizedlist>
	  <listitem>
	    <simpara>openssl (<ulink
	    url="http://www.openssl.org">http://www.openssl.org</ulink>)</simpara></listitem>
	  <listitem>
	    <simpara>curses or ncurses (<ulink
		url="http://www.gnu.org/software/ncurses/">http://www.gnu.org/software/ncurses/</ulink>)</simpara>
	  </listitem>
	</itemizedlist>
      </para>

    </sect2>

    <sect2 id="compilers">
      <title>Supported Compilers</title>

      <para>&YP; is written in C++, so you obviously need a C++
	compiler to compile. It compiles out of the box using the
	following compilers</para>

      <para>
	<itemizedlist>
	  <listitem>
	    <simpara>&SUN; Studio 11 C++ Compiler (only tested under
	    &SOLARIS; 10 x86)</simpara>
	  </listitem>
	  <listitem>
	    <simpara>GNU GCC</simpara>
	  </listitem>
	</itemizedlist>
      </para>
    </sect2>

  </sect1>

  <sect1 id="buildinstr">
    <title>Brief Build Instructions</title>

    <para>&YP; uses a <command>configure</command> script as generated
      by <command>autoconf</command> and friends for configuring the
      build process of &YP;. Change to the directory where you
      unpacked <filename>&YPPKG;</filename> and simply type</para>

    <para>
<screen>
  <prompt>#</prompt> <literal>./configure</literal>
</screen>
    </para>

    <para>on the command line. The <command>configure</command> script will then check
      the system an prepares for the build process.
    </para>

    <para>If the <command>configure</command> script successfully
    finishes, type</para>

    <para>
<screen>
  <prompt>#</prompt> <literal>make</literal>
</screen>
    </para>

    <para>&YP; will now be built. After the build has finished,
      switch to the root user if not done already, and type</para>

    <para>
<screen>
  <prompt>#</prompt> <literal>make install</literal>
</screen>
    </para>

    <para>This will install &YP; into the
      <filename>/usr/local/bin</filename> directory, if the prefix has
      not been changed by providing
      <option>--prefix=<literal>&lt;PATH&gt;</literal></option> to the
      <command>configure</command> script.</para>

    <para>To start &YP; issue
      <filename>/usr/local/bin</filename>/&yp; on
      the command line.</para>
  </sect1>

  <sect1 id="confoptions">
    <title>Brief configure Options Description</title>

    <variablelist>
      <varlistentry>
	<term>
	  <option>--prefix=</option><replaceable>PATH</replaceable>
	</term>

	<listitem>
	  <para><replaceable>PATH</replaceable> is the base directory
	    where &YP; will be installed. The executable is installed
	    in
	    <replaceable>PATH</replaceable><filename>/bin</filename>.
	  </para>
	</listitem>

      </varlistentry>

      <varlistentry>
	<term>
	  <option>--with-curses-include=</option><replaceable>PATH</replaceable>
	</term>

	<listitem><para>This option tells the compiler where to find
	    the header files of
	    curses/ncurses. <replaceable>PATH</replaceable> has to be
	    the directory where the header files are located, not the
	    file name of the header file.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>--with-curses-lib=</option><replaceable>PATH</replaceable>
	</term>

	<listitem>
	  <para>This option tells the linker where to find the
	    curses/ncurses shared
	    library. <replaceable>PATH</replaceable> has to be the
	    directory where the shared library is located, not the
	    file name of the shared library.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>--with-openssl-include=</option><replaceable>PATH</replaceable>
	</term>

	<listitem>
	  <para>This options tells the compiler where to find the
	    header files of openssl. <replaceable>PATH</replaceable>
	    has to be the directory where the header files are
	    located, not the file name of the header file.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>--with-openssl-lib=</option><replaceable>PATH</replaceable>
	</term>

	<listitem>
	  <para>This option tells the linker where to find the openssl
	    shared library. <replaceable>PATH</replaceable> has to be
	    the directory where the shared library is located, not the
	    file name of the shared library.</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1 id="wgi">
    <title>What gets installed?</title>

    <para>Upon
    issuing <command>make <option>install</option></command> the
    following files are installed in <replaceable>PATH</replaceable>
    (assuming you did not change the destination of the files)</para>

    <variablelist>

      <varlistentry>
	<term><filename><replaceable>PATH</replaceable>/bin/yapet</filename></term>
	<listitem><para>The binary.</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><filename><replaceable>PATH</replaceable>/share/man/man1/yapet.1</filename></term>
	<listitem><para>The manual page for &YP;.</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><filename><replaceable>PATH</replaceable>/share/applications/yapet.desktop</filename></term>
	<listitem><para>The desktop file for GNOME et al.</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><filename><replaceable>PATH</replaceable>/share/doc/[AUTHORS|COPYING|DESIGN|README]</filename></term>
	<listitem><para>Various documentation files.</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><filename><replaceable>PATH</replaceable>/share/doc/html/[DESIGN.html|README.html|yapet.html]</filename></term>
	<listitem><para>Various documentation files in HTML format.</para></listitem>
      </varlistentry>

    </variablelist>

  </sect1>

  <sect1 id="furtherinfo">
    <title>Further Information</title>

    <para>For more information about the configure script, read the
      file <filename>INSTALL.generic</filename> which comes along with
      the tarball of &YP;.</para>
  </sect1>

</article>
