##
## This makefile is not used during regular build. It has to be called
## separately
##

DOCBOOK_BASE ?= http://docbook.sourceforge.net/release/xsl/current


# Used to conditionally include documentation for NLS support.
#
# Please not that the xml comments have to include a block of text.
if USE_NLS
XSLPROFILE_NLS = withnls
else
XSLPROFILE_NLS = withoutnls
endif

XSLPROFILE_KEYWORDS = $(XSLPROFILE_NLS)

docbook_profile_xsl     = $(DOCBOOK_BASE)/profiling/profile.xsl
docbook_html_xsl = $(DOCBOOK_BASE)/xhtml/docbook.xsl
docbook_man_xsl     = $(DOCBOOK_BASE)/manpages/docbook.xsl

XSLTPROC        = xsltproc
XSL_PARAMS	= --stringparam make.year.ranges 1
W3M             = w3m

STATIC_FILES = $(srcdir)/bugreport.sgml $(srcdir)/caution.sgml	\
$(srcdir)/copyright.sgml $(srcdir)/license.sgml			\
$(srcdir)/pwrecord.sgml $(srcdir)/supportedplatforms.sgml

GENERATED_FILES = $(srcdir)/csv2yapet.sgml $(srcdir)/yapet2csv.sgml	\
$(srcdir)/DESIGN.sgml $(srcdir)/yapet.adoc				\
$(srcdir)/yapet_colors.sgml $(srcdir)/yapet_config.adoc			\
$(srcdir)/README.adoc $(srcdir)/INSTALL.adoc $(srcdir)/NEWS.adoc

TARGETS_TEXT = INSTALL README NEWS

TARGETS = $(srcdir)/Doxyfile $(srcdir)/INSTALL.html			\
$(srcdir)/NEWS.html $(srcdir)/README.html $(srcdir)/DESIGN.html		\
$(srcdir)/yapet.html $(srcdir)/yapet.1 $(srcdir)/csv2yapet.html		\
$(srcdir)/csv2yapet.1 $(srcdir)/yapet2csv.html $(srcdir)/yapet2csv.1	\
$(srcdir)/yapet_colors.5 $(srcdir)/yapet_colors.html			\
$(srcdir)/yapet_config.5 $(srcdir)/yapet_config.html $(TARGETS_TEXT)

editfile = $(SED) -e 's|@PACKAGE_STRING[@]|$(PACKAGE_STRING)|g' \
	-e 's|@PACKAGE_VERSION[@]|$(PACKAGE_VERSION)|g' \
	-e 's|@PACKAGE_NAME[@]|$(PACKAGE_NAME)|g' \
	-e 's|@PACKAGE[@]|$(PACKAGE)|g' \
	-e 's|@PACKAGE_TARNAME[@]|$(PACKAGE_TARNAME)|g' \
	-e 's|@srcdir[@]|$(srcdir)|g' \
	-e 's|@top_srcdir[@]|$(top_srcdir)|g' \
	-e 's|@top_builddir[@]|$(top_builddir)|g' \
	-e 's|@builddir[@]|$(builddir)|g'

all: $(TARGETS)

.adoc.in.adoc: Makefile.doc
	$(editfile) $< > $@

.adoc.html: $(GENERATED_FILES) $(STATIC_FILES)
	asciidoctor -b html5 -o $@ $<

.sgml.in.sgml: Makefile.doc
	$(editfile) $< > $@

.sgml.html: $(GENERATED_FILES) $(STATIC_FILES)
	rm -f $@
	$(XSLTPROC) --stringparam profile.condition "$(XSLPROFILE_KEYWORDS)" -o $@.profile $(docbook_profile_xsl) $<
	$(XSLTPROC) $(XSL_PARAMS) -o $@ $(docbook_html_xsl) $@.profile
	rm $@.profile

# Debian's w3m uses -s instead -S. Instead of checking what is
# supported, we simply call it again with -s upon error using -S
$(TARGETS_TEXT): $(GENERATED_FILES)
	cp $(srcdir)/$@.adoc $(top_srcdir)/$@

.sgml.1: $(GENERATED_FILES) $(STATIC_FILES)
	rm -f $(srcdir)/$@
	$(XSLTPROC) --stringparam profile.condition "$(XSLPROFILE_KEYWORDS)" -o $@.profile $(docbook_profile_xsl) $<
	$(XSLTPROC) --param man.justify 1 --param man.output.encoding ASCII -o $@ $(docbook_man_xsl) $@.profile
	rm $@.profile

.adoc.1: $(GENERATED_FILES) $(STATIC_FILES)
	asciidoctor -b manpage -o $@ $<

.adoc.5: $(GENERATED_FILES) $(STATIC_FILES)
	asciidoctor -b manpage -o $@ $<

.sgml.5: $(GENERATED_FILES) $(STATIC_FILES)
	rm -f $(srcdir)/$@
	$(XSLTPROC) --stringparam profile.condition "$(XSLPROFILE_KEYWORDS)" -o $@.profile $(docbook_profile_xsl) $<
	$(XSLTPROC) --param man.justify 1 --param man.output.encoding ASCII -o $@ $(docbook_man_xsl) $@.profile
	rm $@.profile

$(srcdir)/Doxyfile: $(srcdir)/Doxyfile.in
	$(editfile) $< > $@

clean:
	rm -f *.tmp.html
	rm -rf source-doc
	rm -f  $(GENERATED_FILES) $(TARGETS)

SUFFIXES = .sgml .sgml.in .html .1 .5 .adoc .adoc.in
